@model PagedList.IPagedList<OnlineShoppingTeam4.ViewModels.ViewProductCategoryS>
@using PagedList.Mvc;
@{int itemCount = Model.Count; }
<div class="container whiterounded coloronwhite">

    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Products
            </h1>
            <div>
                <ol class="breadcrumb">
                    <li class="active">
                        @using (Html.BeginForm("Products", "Products", new
                        {
                            category = ViewBag.title
                        }, FormMethod.Post, htmlAttributes: new { id = "searchInput" }))
                        {
                            <div class="input-group classusedjusthere">
                                <input type="text" name="search" class="form-control searchinput" style="width:auto" placeholder="Search for Products">
                                <div class="input-group-btn">
                                    <button class="btn btn-default" type="submit">
                                        <i class="glyphicon glyphicon-search"></i>
                                    </button>
                                </div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.search))
                        {
                            <a href="/Products/Products?category=@(ViewBag.title)" class="bread"> @(ViewBag.title) </a> <span class="bread">/ @(ViewBag.search)</span>
                        }
                        else
                        {
                            <span class="bread">@(ViewBag.title)</span>
                        }

                    </li>
                </ol>
            </div>
        </div>
    </div>
    @{
        for (int i = 0; i < itemCount; i += 2)
        {
            <div class="row productdiv">
                <div class="col-md-6 portfolio-item container @(Model[i].Discontinued ? "discontinued" : "")" style="display:block">
                    <div class="col-xs-6">
                        <img src="/Images/@Model.ElementAt(i).CategoryName/@(Model.ElementAt(i).ProductID).jpg" class="img-responsive products">
                    </div>
                    <ul class="col-xs-6">
                        <li class="textlarge"><strong>@Model.ElementAt(i).ProductName</strong></li>
                        <li class="textlarge"><strong>Price: @Decimal.Round(Model.ElementAt(i).ProductPrice, 2) @(Model[i].ProductPrice == 1 ? " Rs": " Rs")</strong></li>
                        <li><strong>Category: @Model.ElementAt(i).CategoryName</strong></li>
                        <li><strong>Suplier: @Model.ElementAt(i).SuppliersName</strong></li>
                        @{
                            if (Model[i].CategoryName != "Services")
                            {
                                <li><strong>In Stock: @Model.ElementAt(i).Stock</strong></li>
                            }
                        }
                        <li><strong>On Order: @Model.ElementAt(i).OnOrder</strong></li>
                        <li class="liWithoutPoint">
                            <div class="shopcartcontainer-products">
                                <div class="row">
                                    <div class="col-md-6">
                                        <a href="javascript:" onclick="AddToCart(new CartProducts(@Model.ElementAt(i).ProductID,1,'@Model.ElementAt(i).CategoryName'))" class="shopcart-link">
                                            <div class="align-middle img-circle roundedshop">
                                                <i class="glyphicon glyphicon-shopping-cart align-middle shopcartProductIcon"></i>
                                                <div class="shopcart-container-text">
                                                    <span id="shopcart-productcount">Cart</span>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                    <div class="col-md-6">
                                        <a href="javascript:" onclick="AddToWishList(new CartProducts(@Model.ElementAt(i).ProductID,1,'@Model.ElementAt(i).CategoryName'))" class="shopcart-link">
                                            <div class="align-middle img-circle roundedshop">
                                                <i class="glyphicon glyphicon-heart-empty align-middle wishlistProductIcon"></i>
                                                <div class="wishlist-container-text">
                                                    <span id="wishlist-productcount">WishList</span>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </div>

                            </div>
                        </li>
                    </ul>
                </div>
                <br />
                @if (i + 1 < itemCount)
                {
                    <div class="col-md-6 portfolio-item container @(Model[i + 1].Discontinued ? "discontinued" : "")" style="display:block">
                        <div class="col-xs-6">
                            <img src="/Images/@Model.ElementAt(i + 1).CategoryName/@(Model.ElementAt(i + 1).ProductID).jpg" class="img-responsive products">
                        </div>
                        <ul class="col-xs-6">
                            <li class="textlarge"><strong>@Model.ElementAt(i + 1).ProductName</strong></li>
                            <li class="textlarge"><strong>Price: @Decimal.Round(Model.ElementAt(i + 1).ProductPrice, 2) @(Model[i + 1].ProductPrice == 1 ? "Rs": "Rs")</strong></li>
                            <li><strong>Category: @Model.ElementAt(i + 1).CategoryName</strong></li>
                            <li><strong>Suplier: @Model.ElementAt(i + 1).SuppliersName</strong></li>
                            @{
                                if (Model[i].CategoryName != "Services")
                                {
                                    <li><strong>In Stock: @Model.ElementAt(i + 1).Stock</strong></li>
                                }
                            }
                            <li><strong>On Order: @Model.ElementAt(i + 1).OnOrder</strong></li>
                            <li class="liWithoutPoint">
                                <div class="shopcartcontainer-products">


                                    <div class="row">
                                        <div class="col-md-6">
                                            <a href="javascript:" onclick="AddToCart(new CartProducts(@Model.ElementAt(i+1).ProductID,1,'@Model.ElementAt(i+1).CategoryName'))" class="shopcart-link">
                                                <div class="align-middle img-circle roundedshop">
                                                    <i class="glyphicon glyphicon-shopping-cart align-middle shopcartProductIcon"></i>
                                                    <div class="shopcart-container-text">
                                                        <span id="shopcart-productcount">Cart</span>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        <div class="col-md-6">
                                            <a href="javascript:" onclick="AddToWishList(new CartProducts(@Model.ElementAt(i+1).ProductID,1,'@Model.ElementAt(i+1).CategoryName'))" class="shopcart-link">
                                                <div class="align-middle img-circle roundedshop">
                                                    <i class="glyphicon glyphicon-heart-empty align-middle wishlistProductIcon"></i>
                                                    <div class="wishlist-container-text">
                                                        <span id="wishlist-productcount">WishList</span>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    </div>

                                </div>
                            </li>
                        </ul>
                    </div>
                }
            </div>
            <hr />
        }
    }
    <hr>
    <div class="row text-center">
        <div class="col-lg-12">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Products", "Products",
            new { search = ViewBag.search, category = ViewBag.category, page }))
        </div>
    </div>
</div>